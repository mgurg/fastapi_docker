[tool.poetry]
name = "fastapi_docker"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = {extras = ["all"], version = "^0.100.0"}
SQLAlchemy = "^2.0"
alembic = "^1.9.1"
uvicorn = ">=0.18.2"
gunicorn = "^20.1.0"
python-dotenv = "^0.21"
loguru = "^0.7.0"
typeguard = "^2.13.3"
Faker = "^16"
email-validator = ">=2.0.0"
requests = "^2.28.1"
typer = {extras = ["all"], version = "^0.9.0"}
disposable-email-domains = ">=0.0.84"
passlib = {extras = ["argon2"], version = "^1.7.4"}
pytz = "^2022"
langcodes = "^3.3.0"
python-stdnum = "^1.18"
Unidecode = "^1.3"
pendulum = "^2.1.2"
sentry-sdk = {extras = ["fastapi"], version = "^1.9.5"}
user-agents = "^2.2.0"
boto3 = "^1.24.37"
python-multipart = "^0.0.5"
fastapi-pagination = {extras = ["sqlalchemy"], version = "^0.12.0"}
pydantic-factories = "^1.4.1"
RegonAPI = "^1.3.1"
APScheduler = "4.0.0a2"
sqlalchemy-easy-profile = "^1.3"
pyvieser = "^0.0.4"
pyotp = "^2.7.0"
httpx = "^0.23"
psycopg = {extras = ["binary"], version = "^3.1"}
pandas = "2.0.0"
fastapi-babel = "^0.0.8"

[tool.poetry.dev-dependencies]
pytest = "^7.2"
black = "^23"
#isort = {extras = ["colors"], version = "^5.12"}
#autoflake = "^2.0"
pytest-cov = "^4.0.0"
pytest-pretty = "^1.2"
ruff = ">=0.0.249"

[tool.poetry.group.dev.dependencies]
bump-pydantic = "^0.3.0"
pymender = "^0.2.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
parallel = true
source = [
    "app",
    "tests"
]

[tool.coverage.report]
precision = 2
exclude_lines = [
    "pragma: no cover",
    "@overload",
    'if __name__ == "__main__":',
    "if TYPE_CHECKING:",
]


[tool.black]
color = true
line-length = 120
target-version = ['py310']
skip-string-normalization = false
skip-magic-trailing-comma = true

[tool.ruff]
line-length = 120
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    'Q', 
    'RUF100', 
    'C90', # is too complex ({complexity} > {max_complexity})
    'UP', #  upgrade syntax for newer versions of the language.
]
ignore = [
#    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
#    "C901",  # too complex
]
flake8-quotes = {inline-quotes = 'double', multiline-quotes = 'double'}
target-version = "py310"

[tool.ruff.isort]
combine-as-imports = true
known-third-party = ["fastapi", "pydantic", "starlette"]