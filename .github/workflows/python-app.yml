# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:

    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [3.8]
      fail-fast: false

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    # - name: Install poetry
    #   run: |
    #     python -m pip install --upgrade pip
    #     python -m pip install --force git+https://github.com/python-poetry/poetry-core.git@ad33bc2
    #     python -m pip install "poetry==1.2.0a2"
    #     python -m poetry plugin add poetry-version-plugin
    # - name: Configure poetry
    #   run: python -m poetry config virtualenvs.create false
    # - name: Install Dependencies
    #   run: python -m poetry install
    - name: Lint
      if: ${{ matrix.python-version != '3.6' }}
      run: python -m poetry run bash scripts/lint.sh
    - name: Test
      run: python -m poetry run bash scripts/test.sh
    - name: Upload coverage
      uses: codecov/codecov-action@v1  
    # - name: Install dependencies
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install flake8 pytest
    #     if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    # - name: linting
    #   uses: alexanderdamiani/pylinter@v1.4.0
    #   with:
    #     python-root: '.'
    #     flake8-flags: ''
    #     mypy-flags: ''
    #     fail-on-isort: true
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    # - name: Test with pytest
    #   run: |
    #     # calling via python will also add the current directory to sys.path
    #     if [ -d tests ] || [ -d test ]; then python -m pytest; fi
